[
  {
    "Likelihood Of Attack": "Medium",
    "condition": "target.tracksExecutionFlow is True or target.storesLogData is True or target.data is True",
    "description": "Integer Attacks",
    "details": "An attacker takes advantage of the structure of integer variables to cause these variables to assume values that are not expected by an application. For example, adding one to the largest positive integer in a signed integer variable results in a negative number. Negative numbers may be illegal in an application and the application may prevent an attacker from providing them directly, but the application may not consider that adding two positive numbers can create a negative number do to the structure of integer storage formats.",
    "example": "An attacker manipulates an integer variable that controls the number of items to display on a page, causing it to overflow and display all items in the database.",
    "mitigations": "Implement checks on the boundaries of integer inputs and validate all inputs. Handle crashes effectively and manage resource consumption to mitigate potential DoS conditions caused by integer attacks.",
    "prerequisites": "The target application must have an integer variable for which only some of the possible integer values are expected by the application and where there are no checks on the value of the variable before use. The attacker must be able to manipulate the targeted integer variable such that normal operations result in non-standard values due to the storage structure of integers.",
    "references": "https://cwe.mitre.org/data/definitions/682.html",
    "severity": "Medium",
    "target": [
      "Process",
      "Datastore",
      "Dataflow"
    ],
    "SID": "TEST"
  }
]
